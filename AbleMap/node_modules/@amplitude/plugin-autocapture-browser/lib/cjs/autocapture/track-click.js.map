{"version":3,"file":"track-click.js","sourceRoot":"","sources":["../../../src/autocapture/track-click.ts"],"names":[],"mappings":";;;;AACA,6BAAiF;AAEjF,sCAA2E;AAC3E,0CAA+D;AAE/D,IAAM,oBAAoB,GAAG,CAAC,CAAC;AAE/B,SAAgB,WAAW,CAAC,EAU3B;QATC,SAAS,eAAA,EACT,cAAc,oBAAA,EACd,OAAO,aAAA,EACP,gBAAgB,sBAAA;IAOR,IAAA,eAAe,GAAK,cAAc,gBAAnB,CAAoB;IAE3C,iFAAiF;IACjF,mGAAmG;IACnG,wFAAwF;IACxF,IAAM,iBAAiB,GAAG,eAAe,CAAC,IAAI,CAC5C,IAAA,eAAQ,GAAE,EACV,IAAA,aAAM,EAAC,UAAC,EAAe;YAAf,KAAA,qBAAe,EAAd,IAAI,QAAA,EAAE,OAAO,QAAA;QACpB,IAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC;QACjE,0BAA0B;QAC1B,IAAM,OAAO,GACX,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE;YAC1D,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAC7D,OAAO,aAAa,IAAI,CAAC,OAAO,CAAC;IACnC,CAAC,CAAC,CACH,CAAC;IAEF,qDAAqD;IACrD,IAAM,cAAc,GAAG,eAAe,CAAC,IAAI,CACzC,IAAA,mBAAY,EAAC,OAAO,CAAC,YAAY,CAAC,EAClC,IAAA,UAAG,EAAC,cAAM,OAAA,SAAkB,EAAlB,CAAkB,CAAC,CAC9B,CAAC;IAEF,IAAM,QAAQ,GAAG,IAAA,YAAK,EAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC;IAE1D,0EAA0E;IAC1E,IAAM,cAAc,GAAG,eAAe,CAAC,IAAI,CACzC,IAAA,YAAK,EAAC,CAAC,CAAC,EACR,IAAA,aAAM,EAAC,qCAA2B,CAAC,EACnC,IAAA,aAAM,EAAC,UAAC,KAAK;QACX,wDAAwD;QACxD,OAAO,gBAAgB,CAAC,OAAO,EAAE,KAAK,CAAC,sBAAsB,CAAC,CAAC;IACjE,CAAC,CAAC,EACF,IAAA,aAAM,EAAC,QAAQ,CAAC,CACjB,CAAC;IAEF,OAAO,cAAc,CAAC,SAAS,CAAC,UAAC,MAAM;;QACrC,+CAA+C;QAC/C,IAAM,SAAS,GACb,MAAM,CAAC,MAAM,IAAI,oBAAoB,CAAC,CAAC,CAAC,2CAA+B,CAAC,CAAC,CAAC,2CAA+B,CAAC;;YAE5G,KAAoB,IAAA,WAAA,iBAAA,MAAM,CAAA,8BAAA,kDAAE;gBAAvB,IAAM,KAAK,mBAAA;gBACd,0BAA0B;gBAC1B,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,uBAAuB,CAAC,CAAC;aAC5D;;;;;;;;;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAzDD,kCAyDC","sourcesContent":["import { AllWindowObservables, AutoCaptureOptionsWithDefaults } from 'src/autocapture-plugin';\nimport { buffer, filter, map, debounceTime, merge, pairwise, delay } from 'rxjs';\nimport { BrowserClient } from '@amplitude/analytics-core';\nimport { filterOutNonTrackableEvents, shouldTrackEvent } from '../helpers';\nimport { AMPLITUDE_ELEMENT_CLICKED_EVENT } from '../constants';\n\nconst RAGE_CLICK_THRESHOLD = 5;\n\nexport function trackClicks({\n  amplitude,\n  allObservables,\n  options,\n  shouldTrackEvent,\n}: {\n  amplitude: BrowserClient;\n  allObservables: AllWindowObservables;\n  options: AutoCaptureOptionsWithDefaults;\n  shouldTrackEvent: shouldTrackEvent;\n}) {\n  const { clickObservable } = allObservables;\n\n  // Trigger if the target of the click event has changed and position is different\n  // Keeping track of position is important to avoid false positives when the user clicks on the same\n  // element where certain frameworks could replace the element instance between rerenders\n  const comparisonTrigger = clickObservable.pipe(\n    pairwise(),\n    filter(([prev, current]) => {\n      const targetChanged = prev.event.target !== current.event.target;\n      /* istanbul ignore next */\n      const samePos =\n        Math.abs(current.event.screenX - prev.event.screenX) <= 20 &&\n        Math.abs(current.event.screenY - prev.event.screenY) <= 20;\n      return targetChanged && !samePos;\n    }),\n  );\n\n  // Trigger if there is no click event within 1 second\n  const timeoutTrigger = clickObservable.pipe(\n    debounceTime(options.debounceTime),\n    map(() => 'timeout' as const),\n  );\n\n  const triggers = merge(comparisonTrigger, timeoutTrigger);\n\n  // Get buffers of clicks, if the buffer length is over 5, it is rage click\n  const bufferedClicks = clickObservable.pipe(\n    delay(0),\n    filter(filterOutNonTrackableEvents),\n    filter((click) => {\n      // Only track clicks on elements that should be tracked,\n      return shouldTrackEvent('click', click.closestTrackedAncestor);\n    }),\n    buffer(triggers),\n  );\n\n  return bufferedClicks.subscribe((clicks) => {\n    // TODO: update this when rage clicks are added\n    const clickType =\n      clicks.length >= RAGE_CLICK_THRESHOLD ? AMPLITUDE_ELEMENT_CLICKED_EVENT : AMPLITUDE_ELEMENT_CLICKED_EVENT;\n\n    for (const click of clicks) {\n      /* istanbul ignore next */\n      amplitude?.track(clickType, click.targetElementProperties);\n    }\n  });\n}\n"]}