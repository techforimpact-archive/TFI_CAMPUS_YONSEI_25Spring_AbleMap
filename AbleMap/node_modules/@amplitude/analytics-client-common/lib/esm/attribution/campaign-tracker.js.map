{"version":3,"file":"campaign-tracker.js","sourceRoot":"","sources":["../../../src/attribution/campaign-tracker.ts"],"names":[],"mappings":"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","sourcesContent":["import { createIdentifyEvent, Identify } from '@amplitude/analytics-core';\nimport {\n  Storage,\n  Campaign,\n  CampaignParser as ICampaignParser,\n  CampaignTracker as ICampaignTracker,\n  CampaignTrackFunction,\n  CampaignTrackerOptions,\n  BaseEvent,\n} from '@amplitude/analytics-types';\nimport { getCookieName as getStorageKey } from '../cookie-name';\nimport { CampaignParser } from './campaign-parser';\nimport { BASE_CAMPAIGN, EMPTY_VALUE, MKTG } from './constants';\n\n/**\n * @deprecated\n * Campaign tracker has mixed logic from built-in and plugin web attribution\n * features. Do not add more features here. The plan moving foward is to consolidate\n * logic in @amplitude/plugin-web-attribution-browser with backward compatibility.\n */\nexport class CampaignTracker implements ICampaignTracker {\n  storage: Storage<Campaign>;\n  storageKey: string;\n  parser: ICampaignParser;\n  track: CampaignTrackFunction;\n  onNewCampaign: (campaign: Campaign) => unknown;\n\n  disabled: boolean;\n  trackNewCampaigns: boolean;\n  trackPageViews: boolean;\n  excludeReferrers: string[];\n  initialEmptyValue: string;\n\n  constructor(apiKey: string, options: CampaignTrackerOptions) {\n    this.storage = options.storage;\n    this.storageKey = getStorageKey(apiKey, MKTG);\n    this.parser = new CampaignParser();\n    this.track = options.track;\n    this.onNewCampaign = options.onNewCampaign;\n\n    this.disabled = Boolean(options.disabled);\n    this.trackNewCampaigns = Boolean(options.trackNewCampaigns);\n    this.trackPageViews = Boolean(options.trackPageViews);\n    this.excludeReferrers = options.excludeReferrers ?? [];\n    if (typeof location !== 'undefined') {\n      this.excludeReferrers.unshift(location.hostname);\n    }\n    this.initialEmptyValue = options.initialEmptyValue ?? EMPTY_VALUE;\n  }\n\n  isNewCampaign(current: Campaign, previous: Campaign | undefined, ignoreSubdomainInReferrer = false) {\n    const { referrer, referring_domain, ...currentCampaign } = current;\n    const { referrer: _previous_referrer, referring_domain: prevReferringDomain, ...previousCampaign } = previous || {};\n\n    if (current.referring_domain && this.excludeReferrers.includes(current.referring_domain)) {\n      return false;\n    }\n\n    const hasNewCampaign = JSON.stringify(currentCampaign) !== JSON.stringify(previousCampaign);\n    const hasNewDomain = ignoreSubdomainInReferrer\n      ? domainWithoutSubdomain(referring_domain || '') !== domainWithoutSubdomain(prevReferringDomain || '')\n      : referring_domain !== prevReferringDomain;\n\n    return !previous || hasNewCampaign || hasNewDomain;\n  }\n\n  async saveCampaignToStorage(campaign: Campaign): Promise<void> {\n    await this.storage.set(this.storageKey, campaign);\n  }\n\n  async getCampaignFromStorage(): Promise<Campaign | undefined> {\n    return await this.storage.get(this.storageKey);\n  }\n\n  createCampaignEvent(campaign: Campaign) {\n    const campaignParameters: Campaign = {\n      // This object definition allows undefined keys to be iterated on\n      // in .reduce() to build indentify object\n      ...BASE_CAMPAIGN,\n      ...campaign,\n    };\n    const identifyEvent = Object.entries(campaignParameters).reduce((identify, [key, value]) => {\n      identify.setOnce(`initial_${key}`, value || this.initialEmptyValue);\n      if (value) {\n        return identify.set(key, value);\n      }\n      return identify.unset(key);\n    }, new Identify());\n\n    const pageViewEvent: BaseEvent = {\n      event_type: 'Page View',\n      event_properties: {\n        page_title: /* istanbul ignore next */ (typeof document !== 'undefined' && document.title) || '',\n        page_location: /* istanbul ignore next */ (typeof location !== 'undefined' && location.href) || '',\n        page_path: /* istanbul ignore next */ (typeof location !== 'undefined' && location.pathname) || '',\n      },\n    };\n    return {\n      ...createIdentifyEvent(identifyEvent),\n      ...(this.trackPageViews && pageViewEvent),\n    };\n  }\n\n  async send(isNewSession: boolean) {\n    if (this.disabled) {\n      return;\n    }\n    const currentCampaign = await this.parser.parse();\n    const previousCampaign = await this.getCampaignFromStorage();\n    if (!isNewSession) {\n      if (!this.trackNewCampaigns || !this.isNewCampaign(currentCampaign, previousCampaign)) {\n        return;\n      }\n      this.onNewCampaign(currentCampaign);\n    }\n    await this.track(this.createCampaignEvent(currentCampaign));\n    await this.saveCampaignToStorage(currentCampaign);\n  }\n}\n\nconst domainWithoutSubdomain = (domain: string) => {\n  const parts = domain.split('.');\n\n  if (parts.length <= 2) {\n    return domain;\n  }\n\n  return parts.slice(parts.length - 2, parts.length).join('.');\n};\n"]}