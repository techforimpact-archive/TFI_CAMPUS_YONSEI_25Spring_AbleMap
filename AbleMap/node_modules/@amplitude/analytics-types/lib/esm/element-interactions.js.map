{"version":3,"file":"element-interactions.js","sourceRoot":"","sources":["../../src/element-interactions.ts"],"names":[],"mappings":"AAIA;;;;;;;;GAQG;AACH,MAAM,CAAC,IAAM,8BAA8B,GAAG;IAC5C,GAAG;IACH,QAAQ;IACR,OAAO;IACP,QAAQ;IACR,UAAU;IACV,OAAO;IACP,OAAO;IACP,OAAO;IACP,4BAA4B;IAC5B,0BAA0B;IAC1B,oBAAoB;CACrB,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,IAAM,6BAA6B,GAAG,iBAAiB,CAAC;AAE/D;;GAEG;AACH,MAAM,CAAC,IAAM,8BAA8B,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC","sourcesContent":["import { Logger } from './logger';\n\nexport type ActionType = 'click' | 'change';\n\n/**\n * Default CSS selectors to define which elements on the page to track.\n * Extend this list to include additional elements to track. For example:\n * ```\n * autocapturePlugin({\n *    cssSelectorAllowlist: [...DEFAULT_CSS_SELECTOR_ALLOWLIST, \".my-class\"],\n * })\n * ```\n */\nexport const DEFAULT_CSS_SELECTOR_ALLOWLIST = [\n  'a',\n  'button',\n  'input',\n  'select',\n  'textarea',\n  'label',\n  'video',\n  'audio',\n  '[contenteditable=\"true\" i]',\n  '[data-amp-default-track]',\n  '.amp-default-track',\n];\n\n/**\n * Default prefix to allow the plugin to capture data attributes as an event property.\n */\nexport const DEFAULT_DATA_ATTRIBUTE_PREFIX = 'data-amp-track-';\n\n/**\n * Default list of elements on the page should be tracked when the page changes.\n */\nexport const DEFAULT_ACTION_CLICK_ALLOWLIST = ['div', 'span', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n\nexport interface ElementInteractionsOptions {\n  /**\n   * List of CSS selectors to allow auto tracking on.\n   * When provided, allow elements matching any selector to be tracked.\n   * Default is ['a', 'button', 'input', 'select', 'textarea', 'label', '[data-amp-default-track]', '.amp-default-track'].\n   */\n  cssSelectorAllowlist?: string[];\n\n  /**\n   * List of page URLs to allow auto tracking on.\n   * When provided, only allow tracking on these URLs.\n   * Both full URLs and regex are supported.\n   */\n  pageUrlAllowlist?: (string | RegExp)[];\n\n  /**\n   * Function to determine whether an event should be tracked.\n   * When provided, this function overwrites all other allowlists and configurations.\n   * If the function returns true, the event will be tracked.\n   * If the function returns false, the event will not be tracked.\n   * @param actionType - The type of action that triggered the event.\n   * @param element - The [Element](https://developer.mozilla.org/en-US/docs/Web/API/Element) that triggered the event.\n   */\n  shouldTrackEventResolver?: (actionType: ActionType, element: DomElement) => boolean;\n\n  /**\n   * Prefix for data attributes to allow auto collecting.\n   * Default is 'data-amp-track-'.\n   */\n  dataAttributePrefix?: string;\n\n  /**\n   * Options for integrating visual tagging selector.\n   */\n  visualTaggingOptions?: {\n    enabled?: boolean;\n    messenger?: Messenger;\n  };\n\n  /**\n   * Debounce time in milliseconds for tracking events.\n   * This is used to detect rage clicks.\n   */\n  debounceTime?: number;\n\n  /**\n   * CSS selector allowlist for tracking clicks that result in a DOM change/navigation on elements not already allowed by the cssSelectorAllowlist\n   */\n  actionClickAllowlist?: string[];\n}\n\nexport interface Messenger {\n  logger?: Logger;\n  setup: () => void;\n}\n\n// DomElement is [Element](https://developer.mozilla.org/en-US/docs/Web/API/Element) if the dom library is included in tsconfig.json\n// and never if it is not included\n// eslint-disable-next-line no-restricted-globals\ntype DomElement = typeof globalThis extends {\n  Element: new (...args: any) => infer T;\n}\n  ? T\n  : never;\n"]}