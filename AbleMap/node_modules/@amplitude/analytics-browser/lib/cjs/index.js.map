{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":";;;;AAAA,sDAAsD;AACtD,4FAA8C;AAC9C,mEAA0D;AAAjD,wHAAA,cAAc,OAAA;AAErB,QAAA,GAAG,GAoBD,gCAAM,MAnBR,QAAA,aAAa,GAmBX,gCAAM,gBAlBR,QAAA,KAAK,GAkBH,gCAAM,QAjBR,QAAA,WAAW,GAiBT,gCAAM,cAhBR,QAAA,YAAY,GAgBV,gCAAM,eAfR,QAAA,SAAS,GAeP,gCAAM,YAdR,QAAA,aAAa,GAcX,gCAAM,gBAbR,QAAA,QAAQ,GAaN,gCAAM,WAZR,QAAA,IAAI,GAYF,gCAAM,OAXR,QAAA,QAAQ,GAWN,gCAAM,WAVR,QAAA,MAAM,GAUJ,gCAAM,SATR,QAAA,KAAK,GASH,gCAAM,QARR,QAAA,OAAO,GAQL,gCAAM,UAPR,QAAA,WAAW,GAOT,gCAAM,cANR,QAAA,QAAQ,GAMN,gCAAM,WALR,QAAA,SAAS,GAKP,gCAAM,YAJR,QAAA,YAAY,GAIV,gCAAM,eAHR,QAAA,YAAY,GAGV,gCAAM,eAFR,QAAA,SAAS,GAEP,gCAAM,YADR,QAAA,KAAK,GACH,gCAAM,OAAC;AACX,mDAAoD;AAA3C,kHAAA,gBAAgB,OAAA;AACzB,yDAA4D;AAAnD,oHAAA,kBAAkB,OAAA;AAC3B,4DAA8D;AAArD,yGAAA,OAAO,OAAA;AAAE,0GAAA,QAAQ,OAAA;AAE1B,0EAA0E;AAC1E,iGAAiG;AACjG,yDAAiC","sourcesContent":["/* eslint-disable @typescript-eslint/unbound-method */\nimport client from './browser-client-factory';\nexport { createInstance } from './browser-client-factory';\nexport const {\n  add,\n  extendSession,\n  flush,\n  getDeviceId,\n  getSessionId,\n  getUserId,\n  groupIdentify,\n  identify,\n  init,\n  logEvent,\n  remove,\n  reset,\n  revenue,\n  setDeviceId,\n  setGroup,\n  setOptOut,\n  setSessionId,\n  setTransport,\n  setUserId,\n  track,\n} = client;\nexport { AmplitudeBrowser } from './browser-client';\nexport { runQueuedFunctions } from './utils/snippet-helper';\nexport { Revenue, Identify } from '@amplitude/analytics-core';\n\n// Export types to maintain backward compatibility with `analytics-types`.\n// In the next major version, only export customer-facing types to reduce the public API surface.\nexport * as Types from './types';\n"]}