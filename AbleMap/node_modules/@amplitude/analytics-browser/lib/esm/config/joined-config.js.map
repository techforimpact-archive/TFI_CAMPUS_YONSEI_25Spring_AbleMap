{"version":3,"file":"joined-config.js","sourceRoot":"","sources":["../../../src/config/joined-config.ts"],"names":[],"mappings":"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","sourcesContent":["import { createRemoteConfigFetch, RemoteConfigFetch } from '@amplitude/analytics-remote-config';\nimport {\n  RequestMetadata,\n  BrowserConfig as IBrowserConfig,\n  AutocaptureOptions,\n  type ElementInteractionsOptions,\n} from '@amplitude/analytics-core';\n\nexport interface AutocaptureOptionsRemoteConfig extends AutocaptureOptions {\n  elementInteractions?: boolean | ElementInteractionsOptionsRemoteConfig;\n}\nexport interface ElementInteractionsOptionsRemoteConfig extends ElementInteractionsOptions {\n  /**\n   * Related to pageUrlAllowlist but holds regex strings which will be initialized and appended to pageUrlAllowlist\n   */\n  pageUrlAllowlistRegex?: string[];\n}\n\nexport type BrowserRemoteConfig = {\n  browserSDK: {\n    autocapture?: AutocaptureOptionsRemoteConfig | boolean;\n  };\n};\n\nexport class BrowserJoinedConfigGenerator {\n  // Local config before generateJoinedConfig is called\n  // Joined config after generateJoinedConfig is called\n  config: IBrowserConfig;\n  remoteConfigFetch: RemoteConfigFetch<BrowserRemoteConfig> | undefined;\n\n  constructor(localConfig: IBrowserConfig) {\n    this.config = localConfig;\n    this.config.loggerProvider.debug(\n      'Local configuration before merging with remote config',\n      JSON.stringify(this.config, null, 2),\n    );\n  }\n\n  async initialize() {\n    this.remoteConfigFetch = await createRemoteConfigFetch<BrowserRemoteConfig>({\n      localConfig: this.config,\n      configKeys: ['analyticsSDK'],\n    });\n  }\n\n  async generateJoinedConfig(): Promise<IBrowserConfig> {\n    try {\n      const remoteConfig =\n        this.remoteConfigFetch &&\n        (await this.remoteConfigFetch.getRemoteConfig('analyticsSDK', 'browserSDK', this.config.sessionId));\n      this.config.loggerProvider.debug('Remote configuration:', JSON.stringify(remoteConfig, null, 2));\n\n      // merge remoteConfig.autocapture and this.config.autocapture\n      // if a field is in remoteConfig.autocapture, use that value\n      // if a field is not in remoteConfig.autocapture, use the value from this.config.autocapture\n      if (remoteConfig && 'autocapture' in remoteConfig) {\n        if (typeof remoteConfig.autocapture === 'boolean') {\n          this.config.autocapture = remoteConfig.autocapture;\n        }\n\n        if (typeof remoteConfig.autocapture === 'object') {\n          const transformedAutocaptureRemoteConfig = { ...remoteConfig.autocapture };\n\n          if (this.config.autocapture === undefined) {\n            this.config.autocapture = remoteConfig.autocapture;\n          }\n\n          // Handle Element Interactions config initialization\n          if (\n            typeof remoteConfig.autocapture.elementInteractions === 'object' &&\n            remoteConfig.autocapture.elementInteractions.pageUrlAllowlistRegex?.length\n          ) {\n            transformedAutocaptureRemoteConfig.elementInteractions = {\n              ...remoteConfig.autocapture.elementInteractions,\n            };\n            const transformedRcElementInteractions = transformedAutocaptureRemoteConfig.elementInteractions;\n\n            const exactAllowList = transformedRcElementInteractions.pageUrlAllowlist ?? [];\n            // Convert string patterns to RegExp objects, warn on invalid patterns and skip them\n            const regexList = [];\n            for (const pattern of remoteConfig.autocapture.elementInteractions.pageUrlAllowlistRegex) {\n              try {\n                regexList.push(new RegExp(pattern));\n              } catch (regexError) {\n                this.config.loggerProvider.warn(`Invalid regex pattern: ${pattern}`, regexError);\n              }\n            }\n\n            const combinedPageUrlAllowlist = exactAllowList.concat(regexList);\n\n            transformedRcElementInteractions.pageUrlAllowlist = combinedPageUrlAllowlist;\n            delete transformedRcElementInteractions.pageUrlAllowlistRegex;\n          }\n\n          if (typeof this.config.autocapture === 'boolean') {\n            this.config.autocapture = {\n              attribution: this.config.autocapture,\n              fileDownloads: this.config.autocapture,\n              formInteractions: this.config.autocapture,\n              pageViews: this.config.autocapture,\n              sessions: this.config.autocapture,\n              elementInteractions: this.config.autocapture,\n              ...transformedAutocaptureRemoteConfig,\n            };\n          }\n\n          if (typeof this.config.autocapture === 'object') {\n            this.config.autocapture = {\n              ...this.config.autocapture,\n              ...transformedAutocaptureRemoteConfig,\n            };\n          }\n        }\n\n        // Override default tracking options if autocapture is updated by remote config\n        this.config.defaultTracking = this.config.autocapture;\n      }\n\n      this.config.loggerProvider.debug('Joined configuration: ', JSON.stringify(this.config, null, 2));\n      this.config.requestMetadata ??= new RequestMetadata();\n      if (this.remoteConfigFetch?.metrics.fetchTimeAPISuccess) {\n        this.config.requestMetadata.recordHistogram(\n          'remote_config_fetch_time_API_success',\n          this.remoteConfigFetch.metrics.fetchTimeAPISuccess,\n        );\n      }\n      if (this.remoteConfigFetch?.metrics.fetchTimeAPIFail) {\n        this.config.requestMetadata.recordHistogram(\n          'remote_config_fetch_time_API_fail',\n          this.remoteConfigFetch.metrics.fetchTimeAPIFail,\n        );\n      }\n    } catch (e) {\n      this.config.loggerProvider.error('Failed to fetch remote configuration because of error: ', e);\n    }\n\n    return this.config;\n  }\n}\n\nexport const createBrowserJoinedConfigGenerator = async (localConfig: IBrowserConfig) => {\n  const joinedConfigGenerator = new BrowserJoinedConfigGenerator(localConfig);\n  await joinedConfigGenerator.initialize();\n  return joinedConfigGenerator;\n};\n"]}