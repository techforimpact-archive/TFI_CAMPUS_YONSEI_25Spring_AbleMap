{"version":3,"file":"config.js","sourceRoot":"","sources":["../../src/config.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Config,\n  Logger,\n  ILogger,\n  LogLevel,\n  Event,\n  Storage,\n  IngestionMetadata,\n  ServerZoneType,\n  OfflineDisabled,\n  Plan,\n  IdentityStorageType,\n  TransportType,\n  MemoryStorage,\n  UUID,\n  CookieStorage,\n  getCookieName,\n  FetchTransport,\n  getQueryParams,\n  UserSession,\n  BrowserOptions,\n  BrowserConfig as IBrowserConfig,\n  DefaultTrackingOptions,\n  TrackingOptions,\n  AutocaptureOptions,\n  CookieOptions,\n  NetworkTrackingOptions,\n} from '@amplitude/analytics-core';\n\nimport { LocalStorage } from './storage/local-storage';\nimport { SessionStorage } from './storage/session-storage';\nimport { XHRTransport } from './transports/xhr';\nimport { SendBeaconTransport } from './transports/send-beacon';\nimport { parseLegacyCookies } from './cookie-migration';\nimport { DEFAULT_IDENTITY_STORAGE, DEFAULT_SERVER_ZONE } from './constants';\nimport { AmplitudeBrowser } from './browser-client';\nimport { VERSION } from './version';\n\n// Exported for testing purposes only. Do not expose to public interface.\nexport class BrowserConfig extends Config implements IBrowserConfig {\n  public readonly version = VERSION;\n  protected _cookieStorage: Storage<UserSession>;\n  protected _deviceId?: string;\n  protected _lastEventId?: number;\n  protected _lastEventTime?: number;\n  protected _optOut = false;\n  protected _sessionId?: number;\n  protected _userId?: string;\n  protected _pageCounter?: number;\n  protected _debugLogsEnabled?: boolean;\n  constructor(\n    public apiKey: string,\n    public appVersion?: string,\n    cookieStorage: Storage<UserSession> = new MemoryStorage(),\n    public cookieOptions: CookieOptions = {\n      domain: '',\n      expiration: 365,\n      sameSite: 'Lax' as const,\n      secure: false,\n      upgrade: true,\n    },\n    public defaultTracking?: boolean | DefaultTrackingOptions,\n    public autocapture?: boolean | AutocaptureOptions,\n    deviceId?: string,\n    public flushIntervalMillis: number = 1000,\n    public flushMaxRetries: number = 5,\n    public flushQueueSize: number = 30,\n    public identityStorage: IdentityStorageType = DEFAULT_IDENTITY_STORAGE,\n    public ingestionMetadata?: IngestionMetadata,\n    public instanceName?: string,\n    lastEventId?: number,\n    lastEventTime?: number,\n    public loggerProvider: ILogger = new Logger(),\n    public logLevel: LogLevel = LogLevel.Warn,\n    public minIdLength?: number,\n    public offline: boolean | typeof OfflineDisabled = false,\n    optOut = false,\n    public partnerId?: string,\n    public plan?: Plan,\n    public serverUrl: string = '',\n    public serverZone: ServerZoneType = DEFAULT_SERVER_ZONE,\n    sessionId?: number,\n    public sessionTimeout: number = 30 * 60 * 1000,\n    public storageProvider: Storage<Event[]> = new LocalStorage({ loggerProvider }),\n    public trackingOptions: Required<TrackingOptions> = {\n      ipAddress: true,\n      language: true,\n      platform: true,\n    },\n    public transport: 'fetch' | 'xhr' | 'beacon' = 'fetch',\n    public useBatch: boolean = false,\n    public fetchRemoteConfig: boolean = true,\n    userId?: string,\n    pageCounter?: number,\n    debugLogsEnabled?: boolean,\n    public networkTrackingOptions?: NetworkTrackingOptions,\n  ) {\n    super({ apiKey, storageProvider, transportProvider: createTransport(transport) });\n    this._cookieStorage = cookieStorage;\n    this.deviceId = deviceId;\n    this.lastEventId = lastEventId;\n    this.lastEventTime = lastEventTime;\n    this.optOut = optOut;\n    this.sessionId = sessionId;\n    this.pageCounter = pageCounter;\n    this.userId = userId;\n    this.debugLogsEnabled = debugLogsEnabled;\n    this.loggerProvider.enable(debugLogsEnabled ? LogLevel.Debug : this.logLevel);\n    this.networkTrackingOptions = networkTrackingOptions;\n  }\n\n  get cookieStorage() {\n    return this._cookieStorage;\n  }\n\n  set cookieStorage(cookieStorage: Storage<UserSession>) {\n    if (this._cookieStorage !== cookieStorage) {\n      this._cookieStorage = cookieStorage;\n      this.updateStorage();\n    }\n  }\n\n  get deviceId() {\n    return this._deviceId;\n  }\n\n  set deviceId(deviceId: string | undefined) {\n    if (this._deviceId !== deviceId) {\n      this._deviceId = deviceId;\n      this.updateStorage();\n    }\n  }\n\n  get userId() {\n    return this._userId;\n  }\n\n  set userId(userId: string | undefined) {\n    if (this._userId !== userId) {\n      this._userId = userId;\n      this.updateStorage();\n    }\n  }\n\n  get sessionId() {\n    return this._sessionId;\n  }\n\n  set sessionId(sessionId: number | undefined) {\n    if (this._sessionId !== sessionId) {\n      this._sessionId = sessionId;\n      this.updateStorage();\n    }\n  }\n\n  get optOut() {\n    return this._optOut;\n  }\n\n  set optOut(optOut: boolean) {\n    if (this._optOut !== optOut) {\n      this._optOut = optOut;\n      this.updateStorage();\n    }\n  }\n\n  get lastEventTime() {\n    return this._lastEventTime;\n  }\n\n  set lastEventTime(lastEventTime: number | undefined) {\n    if (this._lastEventTime !== lastEventTime) {\n      this._lastEventTime = lastEventTime;\n      this.updateStorage();\n    }\n  }\n\n  get lastEventId() {\n    return this._lastEventId;\n  }\n\n  set lastEventId(lastEventId: number | undefined) {\n    if (this._lastEventId !== lastEventId) {\n      this._lastEventId = lastEventId;\n      this.updateStorage();\n    }\n  }\n\n  get pageCounter() {\n    return this._pageCounter;\n  }\n\n  set pageCounter(pageCounter: number | undefined) {\n    if (this._pageCounter !== pageCounter) {\n      this._pageCounter = pageCounter;\n      this.updateStorage();\n    }\n  }\n\n  set debugLogsEnabled(debugLogsEnabled: boolean | undefined) {\n    if (this._debugLogsEnabled !== debugLogsEnabled) {\n      this._debugLogsEnabled = debugLogsEnabled;\n      this.updateStorage();\n    }\n  }\n\n  private updateStorage() {\n    const cache = {\n      deviceId: this._deviceId,\n      userId: this._userId,\n      sessionId: this._sessionId,\n      optOut: this._optOut,\n      lastEventTime: this._lastEventTime,\n      lastEventId: this._lastEventId,\n      pageCounter: this._pageCounter,\n      debugLogsEnabled: this._debugLogsEnabled,\n    };\n    void this.cookieStorage.set(getCookieName(this.apiKey), cache);\n  }\n}\n\nexport const useBrowserConfig = async (\n  apiKey: string,\n  options: BrowserOptions = {},\n  amplitudeInstance: AmplitudeBrowser,\n): Promise<IBrowserConfig> => {\n  // Step 1: Create identity storage instance\n  const identityStorage = options.identityStorage || DEFAULT_IDENTITY_STORAGE;\n  const cookieOptions = {\n    domain:\n      identityStorage !== DEFAULT_IDENTITY_STORAGE ? '' : options.cookieOptions?.domain ?? (await getTopLevelDomain()),\n    expiration: 365,\n    sameSite: 'Lax' as const,\n    secure: false,\n    upgrade: true,\n    ...options.cookieOptions,\n  };\n  const cookieStorage = createCookieStorage<UserSession>(options.identityStorage, cookieOptions);\n\n  // Step 1: Parse cookies using identity storage instance\n  const legacyCookies = await parseLegacyCookies(apiKey, cookieStorage, options.cookieOptions?.upgrade ?? true);\n  const previousCookies = await cookieStorage.get(getCookieName(apiKey));\n  const queryParams = getQueryParams();\n\n  // Step 3: Reconcile user identity\n  const deviceId =\n    options.deviceId ??\n    queryParams.ampDeviceId ??\n    queryParams.deviceId ??\n    previousCookies?.deviceId ??\n    legacyCookies.deviceId ??\n    UUID();\n  const lastEventId = previousCookies?.lastEventId ?? legacyCookies.lastEventId;\n  const lastEventTime = previousCookies?.lastEventTime ?? legacyCookies.lastEventTime;\n  const optOut = options.optOut ?? previousCookies?.optOut ?? legacyCookies.optOut;\n  const sessionId = previousCookies?.sessionId ?? legacyCookies.sessionId;\n  const userId = options.userId ?? previousCookies?.userId ?? legacyCookies.userId;\n  amplitudeInstance.previousSessionDeviceId = previousCookies?.deviceId ?? legacyCookies.deviceId;\n  amplitudeInstance.previousSessionUserId = previousCookies?.userId ?? legacyCookies.userId;\n\n  const trackingOptions = {\n    ipAddress: options.trackingOptions?.ipAddress ?? true,\n    language: options.trackingOptions?.language ?? true,\n    platform: options.trackingOptions?.platform ?? true,\n  };\n  const pageCounter = previousCookies?.pageCounter;\n  const debugLogsEnabled = previousCookies?.debugLogsEnabled;\n\n  // Override default tracking options if autocapture is set\n  if (options.autocapture !== undefined) {\n    options.defaultTracking = options.autocapture;\n  }\n\n  const browserConfig = new BrowserConfig(\n    apiKey,\n    options.appVersion,\n    cookieStorage,\n    cookieOptions,\n    options.defaultTracking,\n    options.autocapture,\n    deviceId,\n    options.flushIntervalMillis,\n    options.flushMaxRetries,\n    options.flushQueueSize,\n    identityStorage,\n    options.ingestionMetadata,\n    options.instanceName,\n    lastEventId,\n    lastEventTime,\n    options.loggerProvider,\n    options.logLevel,\n    options.minIdLength,\n    options.offline,\n    optOut,\n    options.partnerId,\n    options.plan,\n    options.serverUrl,\n    options.serverZone,\n    sessionId,\n    options.sessionTimeout,\n    options.storageProvider,\n    trackingOptions,\n    options.transport,\n    options.useBatch,\n    options.fetchRemoteConfig,\n    userId,\n    pageCounter,\n    debugLogsEnabled,\n    options.networkTrackingOptions,\n  );\n\n  if (!(await browserConfig.storageProvider.isEnabled())) {\n    browserConfig.loggerProvider.warn(\n      `Storage provider ${browserConfig.storageProvider.constructor.name} is not enabled. Falling back to MemoryStorage.`,\n    );\n    browserConfig.storageProvider = new MemoryStorage();\n  }\n\n  return browserConfig;\n};\n\nexport const createCookieStorage = <T>(\n  identityStorage: IdentityStorageType = DEFAULT_IDENTITY_STORAGE,\n  cookieOptions: CookieOptions = {},\n) => {\n  switch (identityStorage) {\n    case 'localStorage':\n      return new LocalStorage<T>();\n    case 'sessionStorage':\n      return new SessionStorage<T>();\n    case 'none':\n      return new MemoryStorage<T>();\n    case 'cookie':\n    default:\n      return new CookieStorage<T>({\n        ...cookieOptions,\n        expirationDays: cookieOptions.expiration,\n      });\n  }\n};\n\nexport const createTransport = (transport?: TransportType) => {\n  if (transport === 'xhr') {\n    return new XHRTransport();\n  }\n  if (transport === 'beacon') {\n    return new SendBeaconTransport();\n  }\n  return new FetchTransport();\n};\n\nexport const getTopLevelDomain = async (url?: string) => {\n  if (\n    !(await new CookieStorage<number>().isEnabled()) ||\n    (!url && (typeof location === 'undefined' || !location.hostname))\n  ) {\n    return '';\n  }\n\n  const host = url ?? location.hostname;\n  const parts = host.split('.');\n  const levels = [];\n  const storageKey = 'AMP_TLDTEST';\n\n  for (let i = parts.length - 2; i >= 0; --i) {\n    levels.push(parts.slice(i).join('.'));\n  }\n  for (let i = 0; i < levels.length; i++) {\n    const domain = levels[i];\n    const options = { domain: '.' + domain };\n    const storage = new CookieStorage<number>(options);\n    await storage.set(storageKey, 1);\n    const value = await storage.get(storageKey);\n    if (value) {\n      await storage.remove(storageKey);\n      return '.' + domain;\n    }\n  }\n\n  return '';\n};\n"]}