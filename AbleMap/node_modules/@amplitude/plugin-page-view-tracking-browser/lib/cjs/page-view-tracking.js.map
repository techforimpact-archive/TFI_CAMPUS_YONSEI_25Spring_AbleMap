{"version":3,"file":"page-view-tracking.js","sourceRoot":"","sources":["../../src/page-view-tracking.ts"],"names":[],"mappings":"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","sourcesContent":["import { CampaignParser, getGlobalScope } from '@amplitude/analytics-client-common';\nimport {\n  BrowserClient,\n  BrowserConfig,\n  EnrichmentPlugin,\n  Event,\n  IdentifyOperation,\n  IdentifyUserProperties,\n  Logger,\n} from '@amplitude/analytics-types';\nimport { BASE_CAMPAIGN } from '@amplitude/analytics-client-common';\nimport { CreatePageViewTrackingPlugin, Options } from './typings/page-view-tracking';\nimport { omitUndefined } from './utils';\n\nexport const defaultPageViewEvent = '[Amplitude] Page Viewed';\n\nexport const pageViewTrackingPlugin: CreatePageViewTrackingPlugin = (options: Options = {}) => {\n  let amplitude: BrowserClient | undefined;\n  const globalScope = getGlobalScope();\n  let loggerProvider: Logger | undefined = undefined;\n  let isTracking = false;\n  let localConfig: BrowserConfig;\n  const { trackOn, trackHistoryChanges, eventType = defaultPageViewEvent } = options;\n\n  const getDecodeURI = (locationStr: string): string => {\n    let decodedLocationStr = locationStr;\n    try {\n      decodedLocationStr = decodeURI(locationStr);\n    } catch (e) {\n      /* istanbul ignore next */\n      loggerProvider?.error('Malformed URI sequence: ', e);\n    }\n\n    return decodedLocationStr;\n  };\n\n  const createPageViewEvent = async (): Promise<Event> => {\n    /* istanbul ignore next */\n    const locationHREF = getDecodeURI((typeof location !== 'undefined' && location.href) || '');\n    return {\n      event_type: eventType,\n      event_properties: {\n        ...(await getCampaignParams()),\n        '[Amplitude] Page Domain':\n          /* istanbul ignore next */ (typeof location !== 'undefined' && location.hostname) || '',\n        '[Amplitude] Page Location': locationHREF,\n        '[Amplitude] Page Path':\n          /* istanbul ignore next */ (typeof location !== 'undefined' && getDecodeURI(location.pathname)) || '',\n        '[Amplitude] Page Title': /* istanbul ignore next */ (typeof document !== 'undefined' && document.title) || '',\n        '[Amplitude] Page URL': locationHREF.split('?')[0],\n      },\n    };\n  };\n\n  const shouldTrackOnPageLoad = () => typeof trackOn === 'undefined' || (typeof trackOn === 'function' && trackOn());\n\n  /* istanbul ignore next */\n  let previousURL: string | null = typeof location !== 'undefined' ? location.href : null;\n\n  const trackHistoryPageView = async (): Promise<void> => {\n    const newURL = location.href;\n    const shouldTrackPageView =\n      shouldTrackHistoryPageView(trackHistoryChanges, newURL, previousURL || '') && shouldTrackOnPageLoad();\n    // Note: Update `previousURL` in the same clock tick as `shouldTrackHistoryPageView()`\n    // This was previously done after `amplitude?.track(await createPageViewEvent());` and\n    // causes a concurrency issue where app triggers `pushState` twice with the same URL target\n    // but `previousURL` is only updated after the second `pushState` producing two page viewed events\n    previousURL = newURL;\n\n    if (shouldTrackPageView) {\n      /* istanbul ignore next */\n      loggerProvider?.log('Tracking page view event');\n      amplitude?.track(await createPageViewEvent());\n    }\n  };\n\n  /* istanbul ignore next */\n  const trackHistoryPageViewWrapper = () => {\n    void trackHistoryPageView();\n  };\n\n  const plugin: EnrichmentPlugin = {\n    name: '@amplitude/plugin-page-view-tracking-browser',\n    type: 'enrichment',\n\n    setup: async (config: BrowserConfig, client: BrowserClient) => {\n      amplitude = client;\n      localConfig = config;\n\n      loggerProvider = config.loggerProvider;\n      loggerProvider.log('Installing @amplitude/plugin-page-view-tracking-browser');\n\n      isTracking = true;\n\n      if (globalScope) {\n        globalScope.addEventListener('popstate', trackHistoryPageViewWrapper);\n\n        /* istanbul ignore next */\n        // There is no global browser listener for changes to history, so we have\n        // to modify pushState directly.\n        // https://stackoverflow.com/a/64927639\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        globalScope.history.pushState = new Proxy(globalScope.history.pushState, {\n          apply: (target, thisArg, [state, unused, url]) => {\n            target.apply(thisArg, [state, unused, url]);\n            if (isTracking) {\n              void trackHistoryPageView();\n            }\n          },\n        });\n      }\n\n      if (shouldTrackOnPageLoad()) {\n        loggerProvider.log('Tracking page view event');\n\n        amplitude.track(await createPageViewEvent());\n      }\n    },\n\n    execute: async (event: Event) => {\n      if (trackOn === 'attribution' && isCampaignEvent(event)) {\n        /* istanbul ignore next */ // loggerProvider should be defined by the time execute is invoked\n        loggerProvider?.log('Enriching campaign event to page view event with campaign parameters');\n        const pageViewEvent = await createPageViewEvent();\n        event.event_type = pageViewEvent.event_type;\n        event.event_properties = {\n          ...event.event_properties,\n          ...pageViewEvent.event_properties,\n        };\n      }\n\n      // Update the pageCounter for the page view event\n      if (localConfig && event.event_type === eventType) {\n        localConfig.pageCounter = !localConfig.pageCounter ? 1 : localConfig.pageCounter + 1;\n        event.event_properties = {\n          ...event.event_properties,\n          '[Amplitude] Page Counter': localConfig.pageCounter,\n        };\n      }\n      return event;\n    },\n\n    teardown: async () => {\n      if (globalScope) {\n        globalScope.removeEventListener('popstate', trackHistoryPageViewWrapper);\n        isTracking = false;\n      }\n    },\n  };\n  return plugin;\n};\n\nconst getCampaignParams = async () => omitUndefined(await new CampaignParser().parse());\n\nconst isCampaignEvent = (event: Event) => {\n  if (event.event_type === '$identify' && event.user_properties) {\n    const properties = event.user_properties as IdentifyUserProperties;\n    const $set = properties[IdentifyOperation.SET] || {};\n    const $unset = properties[IdentifyOperation.UNSET] || {};\n    const userProperties = [...Object.keys($set), ...Object.keys($unset)];\n    return Object.keys(BASE_CAMPAIGN).every((value) => userProperties.includes(value));\n  }\n  return false;\n};\n\nexport const shouldTrackHistoryPageView = (\n  trackingOption: Options['trackHistoryChanges'],\n  newURLStr: string,\n  oldURLStr: string,\n): boolean => {\n  switch (trackingOption) {\n    case 'pathOnly': {\n      if (oldURLStr == '') return true;\n      const newURL = new URL(newURLStr);\n      const oldURL = new URL(oldURLStr);\n      const newBaseStr = newURL.origin + newURL.pathname;\n      const oldBaseStr = oldURL.origin + oldURL.pathname;\n      return newBaseStr !== oldBaseStr;\n    }\n    default:\n      return newURLStr !== oldURLStr;\n  }\n};\n"]}